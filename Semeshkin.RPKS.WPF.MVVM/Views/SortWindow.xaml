<Window x:Class="Semeshkin.RPKS.WPF.MVVM.Views.SortWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Semeshkin.RPKS.WPF.MVVM.Views"
        xmlns:viewmodels="clr-namespace:Semeshkin.RPKS.WPF.MVVM.ViewModels"
        xmlns:attached="clr-namespace:Semeshkin.Wpf.Styles;assembly=Semeshkin.Wpf.Styles"
        xmlns:control="clr-namespace:Semeshkin.Wpf.Controls;assembly=Semeshkin.Wpf.Controls"
        xmlns:data="clr-namespace:Semeshkin.WPF.MVVM.Data;assembly=Semeshkin.WPF.MVVM"
        xmlns:converters="clr-namespace:Semeshkin.WPF.MVVM.Converters;assembly=Semeshkin.WPF.MVVM"
        xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:chartingToolkit1="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
        mc:Ignorable="d"
        Title="SortWindow" Height="450" Width="800">
    <Window.DataContext>
        <viewmodels:SortViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
            <Setter Property="Margin" Value="0,5,0,0" />
            <Setter Property="Height" Value="{Binding Path=ActualHeight, ElementName=Numeric}" />
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{converters:ArithmeticConverter}"
                              ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                        <MultiBinding.Bindings>
                            <Binding Path="ActualWidth"
                                 ElementName="Numeric" />
                            <Binding>
                                <Binding.Source>
                                    <system:Double>
                                        3.0
                                    </system:Double>
                                </Binding.Source>
                            </Binding>
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
      
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Disabled"
                      Margin="13" x:Name="gistagrama" Visibility="{Binding GistIsEnabled, Converter={converters:DiagramIsVisibilityConverter}}">
            <ItemsControl ItemsSource="{Binding MyCollection}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ProgressBar Value="{Binding Path=Value}" Orientation="Vertical"
                                     Background="Transparent" Width="50" Foreground="{Binding ValueColor}"
                                     Minimum="0" Maximum="{Binding Path=Value, ElementName=Numeric}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
        </ScrollViewer>

        <Grid Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" Grid.ColumnSpan="2"        
                      Margin="13" x:Name="diagrama" Visibility="{Binding CircleIsEnabled, Converter={converters:DiagramIsVisibilityConverter}}">
            <ItemsControl ItemsSource="{Binding MyCollectionPath}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Path Stroke="Black" >
                            <Path.Fill>
                                <MultiBinding Converter="{converters:RgbColorFromArrayConverter}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="RgbRed"/>
                                        <Binding Path="RgbGreen"/>
                                        <Binding Path="RgbBlue"/>

                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Path.Fill>
     
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="100, 100" IsClosed="True">
                                        <LineSegment Point="{Binding  StartPoint}" IsStroked="True"/>
                                        <ArcSegment Point="{Binding EndPoint}" Size="100, 100"
                                                    RotationAngle="{Binding AngleDeg}"
                                                    IsLargeArc="{Binding AngleDeg, Converter={converters:IsLargeArcConverter}}"
                                                    SweepDirection="Clockwise"
                                                    IsStroked="True"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
        </Grid>

        <StackPanel x:Name="NumericStack"
                    IsEnabled="{Binding PauseEnabled, Mode=OneWay}">


            <control:NumericUpDown x:Name="Numeric" Value="{Binding NumericValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               IncrementStepCommand="{Binding NumericUpDownViewModel.IncrementStepCommand}"
                               DecrementStepCommand="{Binding NumericUpDownViewModel.DecrementStepCommand}"
                               VerticalAlignment="Top"
                               MinValue="1" MaxValue="10000"
                               Margin="5,5,5,0">
            </control:NumericUpDown>
            <Button Style="{StaticResource ButtonStyle}"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                Content="Создать массив"
                Command="{Binding CreateArrayCommand}" />

            <Button Style="{StaticResource ButtonStyle}"
                HorizontalAlignment="Center" VerticalAlignment="Center"
                Content="Перемешать"
                Command="{Binding RefreshArrayCommand}" />
        </StackPanel>

        <DockPanel Grid.Row="1" Margin="0 10 0 0">
            <Label DockPanel.Dock="Top" Content="Сортируемые данные" />
            <ScrollViewer Grid.Row="1">
                <TextBlock TextWrapping="Wrap"
                 Text="{Binding ArrayText, Mode=OneWay}" />
            </ScrollViewer>
        </DockPanel>

        <StackPanel x:Name="SettingsStack" Grid.Column="1" Orientation="Vertical" Margin="10,0,0,0"
                    IsEnabled="{Binding PauseEnabled, Mode=OneWay}">
            <Label Content="Задать скорость отображения" />
            <StackPanel Orientation="Horizontal">
                <Slider x:Name="SpeedSlider" DockPanel.Dock="Left" Value="{Binding SliderValue, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" 
                Minimum="0" Maximum="100" SelectionStart="0" IsSelectionRangeEnabled="True"
                SelectionEnd="{Binding Value, RelativeSource={RelativeSource Self}}">
                    <Slider.Width>
                        <MultiBinding Converter="{converters:ArithmeticConverter}"
                                      ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                            <MultiBinding.Bindings>
                                <Binding Path="ActualWidth" 
                                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}"/>
                                <Binding>
                                    <Binding.Source>
                                        <system:Double>
                                            1.3
                                        </system:Double>
                                    </Binding.Source>
                                </Binding>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Slider.Width>
                </Slider>
                <TextBlock Text="{Binding SliderValue, Mode=OneWay}" />
            </StackPanel>
            <Label Content="Выбрать тип отображения"/>
            <ComboBox HorizontalAlignment="Left" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}">
                
                <ComboBoxItem IsSelected="True">
                    <TextBlock Text="Вставками"/>
                </ComboBoxItem>
                <TextBlock Text="Выбором"/>
                <TextBlock Text="Поразрядная"/>
                <TextBlock Text="Слиянием"/>
                <TextBlock Text="Пирамидальная"/>
                <ComboBox.Width>
                    <MultiBinding Converter="{converters:ArithmeticConverter}"
                                  ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                        <MultiBinding.Bindings>
                            <Binding Path="ActualWidth" 
                                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}"/>
                            <Binding>
                                <Binding.Source>
                                    <system:Double>
                                        1.2
                                    </system:Double>
                                </Binding.Source>
                            </Binding>
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </ComboBox.Width>

            </ComboBox>
            <Label Content="Выбрать тип отображения"/>
            <Menu>
                <Menu.Resources>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Command" Value="{Binding SelectDiagramCommand}" />
                    </Style>
                </Menu.Resources>
                <MenuItem Header="Гистограмма" IsEnabled="{Binding GistIsEnabled}"/>
                <MenuItem Header="Круговая диаграмма" IsEnabled="{Binding CircleIsEnabled}"/>
            </Menu>
        </StackPanel>

        <StackPanel Grid.Column="2" Orientation="Vertical">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Height">
                        <Setter.Value>
                            <MultiBinding Converter="{converters:ArithmeticConverter}"
                                          ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                                <MultiBinding.Bindings>
                                    <Binding Path="ActualHeight"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}"/>
                                    <Binding>
                                        <Binding.Source>
                                            <system:Double>
                                                2.0
                                            </system:Double>
                                        </Binding.Source>
                                    </Binding>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width">
                        <Setter.Value>
                            <MultiBinding Converter="{converters:ArithmeticConverter}"
                                          ConverterParameter="{x:Static converters:ArithmeticConverter+Operators.Division}">
                                <MultiBinding.Bindings>
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}"/>
                                    <Binding>
                                        <Binding.Source>
                                            <system:Double>
                                                1.5
                                            </system:Double>
                                        </Binding.Source>
                                    </Binding>
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </StackPanel.Resources>
            <Button Content="Начать сортировку" Command="{Binding StartSortCommand}"
                    IsEnabled="{Binding PauseEnabled, Mode=OneWay}"/>
            <Button Command="{Binding PauseCommand}" 
                    Content="{Binding PauseResumeContent, Mode=OneWay, Converter={converters:PauseOrResumeToStringConverter}}"/>
        </StackPanel>


    </Grid>
    
</Window>
